spring:
  application:
    name: patientapplication

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${oauth.resourceserver.jwt.issueruri}

  jpa:
    open-in-view: false # Disables the "Open Session in View" pattern, which keeps the Hibernate session open during the view rendering phase. Setting it to false improves performance and avoids lazy-loading issues.
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.timezone.default_storage: NORMALIZE
      hibernate.type.preferred_instant_jdbc_type: TIMESTAMP
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true # Ensures that Hibernate does not rely on auto-commit behavior for database connections.
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      # modify batch size as necessary
      hibernate.jdbc.batch_size: 25
      hibernate.order_inserts: true
      hibernate.order_updates: true
      hibernate.query.fail_on_pagination_over_collection_fetch: true
      hibernate.query.in_clause_parameter_padding: true
    hibernate:
      ddl-auto: none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy

  liquibase:
    enabled: true
    contexts: dev

  cloud:
    consul:
      discovery:
        service-name: patientapplication
        health-check-path: /actuator/health
        instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
      config:
        watch:
          enabled: false

server:
  port: 9091

management:
  endpoints:
    web:
      exposure:
        include: health,info

jhipster:
  clientApp:
    name: 'Patient-Microservice'

springdoc:
  swagger-ui:
    oauth2-redirect-url: ${oauth.redirectUri}
    oauth:
      client-id: ${oauth.patientclient.clientid}
      client-secret: ${oauth.patientclient.secret}  #Here, the secret is required for confidential clients
      authorization-url: ${oauth.authUri}
      token-url: ${oauth.provider.keycloak.tokenuri}
      scope: openid
